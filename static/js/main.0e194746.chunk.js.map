{"version":3,"sources":["helpers/Todo.js","helpers/reducer.js","components/TodoAdd.jsx","hooks/useForm.js","hooks/useError.js","components/TodoListItem.jsx","components/TodoList.jsx","components/Todos.jsx","index.js"],"names":["Todo","description","this","id","uuidv4","done","reducer","state","action","type","payload","filter","todo","map","TodoAdd","handleAdd","initialState","useState","values","setValues","target","prev","name","value","useForm","handleInputChange","reset","error","setError","useError","handleError","className","onSubmit","e","preventDefault","trim","length","htmlFor","placeholder","autoComplete","onChange","TodoListItem","handleRemove","handleDone","href","onClick","fill","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","d","TodoList","todos","init","JSON","parse","localStorage","getItem","Todos","useReducer","dispatch","useEffect","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e194746.chunk.js","sourcesContent":["\r\nimport { v4 as uuidv4  } from \"uuid\";\r\n\r\nexport default class Todo {\r\n    constructor(description){\r\n        this.id = uuidv4();\r\n        this.description = description;\r\n        this.done = false;\r\n    }\r\n}","export const reducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"add\":\r\n      return [...state, action.payload];\r\n    case \"remove\":\r\n      return state.filter((todo) => {\r\n        return todo.id !== action.payload;\r\n      });\r\n    case \"done\":\r\n      return state.map((todo) => {\r\n        if (todo.id === action.payload) {\r\n          return {\r\n            ...todo,\r\n            done: !todo.done,\r\n          };\r\n        } else {\r\n          return todo;\r\n        }\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { useError } from \"../hooks/useError\";\r\nimport { useForm } from \"../hooks/useForm\";\r\n\r\nexport const TodoAdd = ({ handleAdd }) => {\r\n  const [{ description }, handleInputChange, reset] = useForm({\r\n    description: \"\",\r\n  });\r\n  const [error, handleError] = useError(false);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (description.trim().length <= 1) {\r\n      if (!error) {\r\n        handleError();\r\n      }\r\n      return;\r\n    }\r\n    if (error) {\r\n      handleError();\r\n    }\r\n    handleAdd(description);\r\n    reset();\r\n  };\r\n  return (\r\n    <>\r\n      {error && (\r\n        <div className=\"error\">\r\n          <h4>The field is required</h4>\r\n        </div>\r\n      )}\r\n      <div className=\"card-header\">\r\n        <h4>Add a todo</h4>\r\n      </div>\r\n      <div className=\"card-body\">\r\n        <form className=\"form\" onSubmit={handleSubmit}>\r\n          <div className=\"campo\">\r\n            <label htmlFor=\"nombre\">Todo description:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"description\"\r\n              className=\"entrada\"\r\n              placeholder=\"Description...\"\r\n              autoComplete=\"off\"\r\n              value={description}\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n          <input type=\"submit\" value=\"Save\" className=\"button\" />\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = (initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const handleInputChange = ({ target }) => {\r\n    setValues((prev) => {\r\n      return {\r\n        ...prev,\r\n        [target.name]: target.value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const reset = () => {\r\n    setValues(initialState);\r\n  };\r\n\r\n  return [values, handleInputChange, reset];\r\n};\r\n","import { useState } from \"react\";\r\n\r\nexport const useError = (initialState = false) => {\r\n  const [error, setError] = useState(initialState);\r\n  const handleError = () => {\r\n    setError((prev) => {\r\n      return !prev;\r\n    });\r\n  };\r\n  return [error, handleError];\r\n};\r\n","import React from \"react\";\r\n\r\nexport const TodoListItem = ({ todo, handleRemove, handleDone }) => {\r\n  const { id, description, done } = todo;\r\n  return (\r\n    <>\r\n      <div className={`card-body ${done && \"done-body cross cross1\"}`}>\r\n        <p className={`${done && \"done\"}`}>id: {id}</p>\r\n        <p className={`${done && \"done\"}`}>Description: {description}</p>\r\n        <div className=\"flex-buttons\">\r\n          <a\r\n            href=\"/#\"\r\n            className={`button delete ${done && \"delete-done-button\"}`}\r\n            onClick={() => {\r\n              handleRemove(id);\r\n            }}\r\n          >\r\n            <span>\r\n              <svg\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                viewBox=\"0 0 24 24\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth=\"2\"\r\n                  d=\"M6 18L18 6M6 6l12 12\"\r\n                ></path>\r\n              </svg>\r\n            </span>\r\n          </a>\r\n          <a\r\n            className={`button update ${done && \"done-button\"}`}\r\n            href=\"/#\"\r\n            onClick={() => {\r\n              handleDone(id);\r\n            }}\r\n          >\r\n            <span>\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                stroke=\"currentColor\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth=\"2\"\r\n                  d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                />\r\n              </svg>\r\n            </span>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { TodoListItem } from \"./TodoListItem\";\r\nexport const TodoList = ({ todos, handleRemove, handleDone }) => {\r\n  return (\r\n    <>\r\n      {todos.length === 0 ? (\r\n        <h2>There aren't elements</h2>\r\n      ) : (\r\n        todos.map((todo) => {\r\n          return <TodoListItem key={todo.id} todo={todo} handleRemove={handleRemove} handleDone={handleDone}/>;\r\n        })\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React, { useReducer, useEffect } from \"react\";\nimport Todo from \"../helpers/Todo\";\nimport { reducer } from \"../helpers/reducer\";\nimport { TodoAdd } from \"./TodoAdd\";\nimport { TodoList } from \"./TodoList\";\n\nconst init = () => {\n  return JSON.parse(localStorage.getItem(\"todo\")) || [];\n};\n\nexport const Todos = () => {\n  const [todos, dispatch] = useReducer(reducer, [], init);\n\n  //*REDUCER ACTIONS\n  const handleAdd = (description) => {\n    dispatch({\n      type: \"add\",\n      payload: new Todo(description),\n    });\n  };\n  const handleRemove = (id) => {\n    dispatch({ type: \"remove\", payload: id });\n  };\n\n  const handleDone = (id) => {\n    dispatch({ type: \"done\", payload: id });\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"todo\", JSON.stringify(todos));\n  }, [todos]);\n\n  return (\n    <>\n      <h1 className=\"text-center\">Todos ({todos.length})</h1>\n\n      <div className=\"container\">\n        <div className=\"flex-container\">\n          <div className=\"formulario\">\n            <TodoAdd handleAdd={handleAdd} />\n          </div>\n          <div className=\"todos\">\n            <TodoList\n              todos={todos}\n              handleRemove={handleRemove}\n              handleDone={handleDone}\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Todos } from \"./components/Todos\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Todos />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}